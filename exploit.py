from pwn import *
import stitch
import subprocess

#['CRITICAL', 'DEBUG', 'ERROR', 'INFO', 'NOTSET', 'WARN', 'WARNING']
context.log_level = 'INFO'

def execmd(cmd):
    return subprocess.check_output(cmd, shell=True)

def command(token, *args) :
    s.recvuntil(token)
    for i in args :
        s.sendline(str(i))
        sleep(0.1)

def solver() :
    fast = lambda token, *args : command(token, *args)

if __name__ == '__main__' :
    if len(sys.argv) == 1:
        s = remote('localhost', 1234)
        #s = process('./binary')
        #s = process(['./binary'], env={"LD_PRELOAD":"./libc.so.6"})
        #print util.proc.pidof(s)
        pause()
    else :
        s = remote('kimtae.xyz', 1234)
    '''
    elf = ELF('bin')
    libc = ELF('libc')
    elf.plt['printf']
    elf.got['printf']
    re.findall('[\w]{10}7f', dat.encode('hex'))[0].decode('hex').ljust(8, '\x00')
    libc.symbols['system']
    binsh = list(libc.search('/bin/sh'))[0]
    '''
    solver()

