from pwn import *
import stitch
import subprocess

#['CRITICAL', 'DEBUG', 'ERROR', 'INFO', 'NOTSET', 'WARN', 'WARNING']
context.log_level = 'INFO'

local = False
if local :
    s = remote('localhost', 1234)
    #s = process('./binary')
    #print util.proc.pidof(s)
    pause()
else :
    s = remote('kimtae.xyz', 1234)

elf = ELF('bin')
libc = ELF('libc')
printf_p = elf.plt['printf']
printf_g = elf.got['printf']
system = libc.symbols['system']
binsh = list(libc.search('/bin/sh'))[0]

def exec(cmd):
    return subprocess.check_output(cmd, shell=True)

def command(token, *args) :
    s.recvuntil(token)
    for i in args :
        i = str(i)
        s.sendline(i)
        #sleep(0.2)
fast = lambda token, *args : command(token, *args)


def solver() :



if __name__ == '__main__' :
    solver()

